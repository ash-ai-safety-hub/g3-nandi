{
 "affirmative_mix": {
  "template": "{% set scan_lst_of_actions = actions.split(' ') %}\n{% set lst_of_actions = [] %}\n{% for item in scan_lst_of_actions %}\n    {lst_of_actions.append(item.lower()[2:] | replace(\"_\", \" \")) | default(\"\", True)}\n{% endfor %}\n\n{% set actions = lst_of_actions | join(\", \") %}\n\nGiven the commands: {commands}\n\nProduce the corresponding correct sequence of actions (comma-separated):",
  "choices_template": null
 },
 "interrogative_mix": {
  "template": "{% set scan_lst_of_actions = actions.split(' ') %}\n{% set lst_of_actions = [] %}\n{% for item in scan_lst_of_actions %}\n    {lst_of_actions.append(item.lower()[2:] | replace(\"_\", \" \")) | default(\"\", True)}\n{% endfor %}\n\n{% set actions = lst_of_actions | join(\", \") %}\n\nGiven the following commands: {commands}\n\nWhat is the corresponding correct sequence of actions (comma-separated)?",
  "choices_template": null
 },
 "plain": {
  "template": "{% set scan_lst_of_actions = actions.split(' ') %}\n{% set lst_of_actions = [] %}\n{% for item in scan_lst_of_actions %}\n    {lst_of_actions.append(item.lower()[2:] | replace(\"_\", \" \")) | default(\"\", True)}\n{% endfor %}\n\n{% set actions = lst_of_actions | join(\", \") %}\n\nNatural language commands: {commands}\n\nSequence of actions:",
  "choices_template": null
 },
 "translate_opposite": {
  "template": "{% set scan_lst_of_actions = actions.split(' ') %}\n{% set lst_of_actions = [] %}\n{% for item in scan_lst_of_actions %}\n    {lst_of_actions.append(item.lower()[2:] | replace(\"_\", \" \")) | default(\"\", True)}\n{% endfor %}\n\n{% set actions = lst_of_actions | join(\", \") %}\n\nGiven some actions \"{actions}\", translate them into natural language.",
  "choices_template": null
 },
 "affirmative_bottom": {
  "template": "{% set scan_lst_of_actions = actions.split(' ') %}\n{% set lst_of_actions = [] %}\n{% for item in scan_lst_of_actions %}\n    {lst_of_actions.append(item.lower()[2:] | replace(\"_\", \" \")) | default(\"\", True)}\n{% endfor %}\n\n{% set actions = lst_of_actions | join(\", \") %}\n\n{commands}\n\nGiven the commands above, produce the corresponding correct sequence of actions. The actions should be comma-separated.",
  "choices_template": null
 },
 "affirmative_opposite": {
  "template": "{% set scan_lst_of_actions = actions.split(' ') %}\n{% set lst_of_actions = [] %}\n{% for item in scan_lst_of_actions %}\n    {lst_of_actions.append(item.lower()[2:] | replace(\"_\", \" \")) | default(\"\", True)}\n{% endfor %}\n\n{% set actions = lst_of_actions | join(\", \") %}\n\nGiven a sequence of actions below, please produce the corresponding  instructions in natural language.\n\n{actions}",
  "choices_template": null
 },
 "interrogative_opposite": {
  "template": "{% set scan_lst_of_actions = actions.split(' ') %}\n{% set lst_of_actions = [] %}\n{% for item in scan_lst_of_actions %}\n    {lst_of_actions.append(item.lower()[2:] | replace(\"_\", \" \")) | default(\"\", True)}\n{% endfor %}\n\n{% set actions = lst_of_actions | join(\", \") %}\n\nGiven a sequence of actions below, what are the corresponding instructions in natural language?\n\n{actions}",
  "choices_template": null
 },
 "interrogative_bottom": {
  "template": "{% set scan_lst_of_actions = actions.split(' ') %}\n{% set lst_of_actions = [] %}\n{% for item in scan_lst_of_actions %}\n    {lst_of_actions.append(item.lower()[2:] | replace(\"_\", \" \")) | default(\"\", True)}\n{% endfor %}\n\n{% set actions = lst_of_actions | join(\", \") %}\n\n{commands}\n\nGiven the commands above, what is the corresponding correct sequence of actions (comma-separated)?",
  "choices_template": null
 },
 "translate": {
  "template": "{% set scan_lst_of_actions = actions.split(' ') %}\n{% set lst_of_actions = [] %}\n{% for item in scan_lst_of_actions %}\n    {lst_of_actions.append(item.lower()[2:] | replace(\"_\", \" \")) | default(\"\", True)}\n{% endfor %}\n\n{% set actions = lst_of_actions | join(\", \") %}\n\nPlease translate correctly the following commands in natural language into the corresponding sequence of actions.\n\n{commands}",
  "choices_template": null
 },
 "interrogative_beginning": {
  "template": "{% set scan_lst_of_actions = actions.split(' ') %}\n{% set lst_of_actions = [] %}\n{% for item in scan_lst_of_actions %}\n    {lst_of_actions.append(item.lower()[2:] | replace(\"_\", \" \")) | default(\"\", True)}\n{% endfor %}\n\n{% set actions = lst_of_actions | join(\", \") %}\n\nGiven the commands below, what is the corresponding correct sequence of actions (comma-separated)?\n\n{commands}",
  "choices_template": null
 },
 "affirmative_beginning": {
  "template": "{% set scan_lst_of_actions = actions.split(' ') %}\n{% set lst_of_actions = [] %}\n{% for item in scan_lst_of_actions %}\n    {lst_of_actions.append(item.lower()[2:] | replace(\"_\", \" \")) | default(\"\", True)}\n{% endfor %}\n\n{% set actions = lst_of_actions | join(\", \") %}\n\nGiven the commands below, please produce the corresponding correct sequence of actions. The actions should be comma-separated. A few examples of actions include: \"turn right\", \"walk\", \"run\", etc.\n\n{commands}",
  "choices_template": null
 }
}